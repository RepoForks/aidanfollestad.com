#!/usr/local/bin/node
var app = require('../app');
var httpProxy = require('http-proxy'),
    http = require('http'),
    https = require('https'),
    proxy = httpProxy.createProxyServer({}),
    url = require('url'),
    fs = require('fs');

var ca = fs.readFileSync('/var/www/ssl/STAR_aidanfollestad_com.ca-bundle', 'utf8');
var key = fs.readFileSync('/var/www/ssl/aidanfollestad_com.key', 'utf8');
var cert = fs.readFileSync('/var/www/ssl/STAR_aidanfollestad_com.crt', 'utf8');
var options = {
    ca: ca,
    key: key,
    cert: cert
};

// Main server, listens on 8080 with HTTPS
var server = https.createServer(options, app);
server.listen(8080);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Event listener for HTTP server "error" event.
 */
function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.log(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.log(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    console.log('Main server listening on ' + bind);
}

// HTTP redirects to HTTPS
http.createServer(function (req, res) {
    res.writeHead(301, {
        "Location": "https://" + req.headers['host'] + req.url,
        "Host": req.headers['host']
    });
    res.end();
}).listen(80, function () {
    console.log('Redirection server listening on port 80');
});

https.createServer(options, function (req, res) {
    if (!req.headers || !req.headers.host) {
        res.statusCode = 400;
        res.end('No Host header specified.');
        return;
    }
    var hostname = req.headers.host.split(":")[0];
    // var pathname = url.parse(req.url).pathname;

    try {
        switch (hostname) {
            case 'polar.aidanfollestad.com':
                proxy.web(req, res, {target: 'https://aidanfollestad.com:3000', https: true});
                break;
            default:
                proxy.web(req, res, {target: 'https://aidanfollestad.com:8080', https: true});
                break;
        }
    } catch (e) {
        res.end('Error: ' + e.toString());
    }
}).listen(443, function () {
    console.log('Proxy server listening on port 443');
});

proxy.on('error', function (e) {
    console.log('PROXY ERROR: ' + e);
});